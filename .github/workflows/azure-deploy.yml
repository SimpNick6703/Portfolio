name: Deploy Portfolio to Azure

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'infra/**'
      - 'azure.yaml'
      - '.github/workflows/azure-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in with Azure
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ vars.AZURE_TENANT_ID }}"}'

    - name: Create Resource Group
      run: |
        az group create \
          --name "rg-${{ vars.AZURE_ENV_NAME }}" \
          --location "${{ vars.AZURE_LOCATION }}" \
          --tags "azd-env-name=${{ vars.AZURE_ENV_NAME }}"

    - name: Deploy Infrastructure
      run: |
        DEPLOYMENT_NAME="portfolio-deployment-${{ github.run_number }}"
        echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV
        
        az deployment group create \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --template-file infra/main.bicep \
          --parameters environmentName="${{ vars.AZURE_ENV_NAME }}" \
          --parameters location="${{ vars.AZURE_LOCATION }}" \
          --parameters resourceGroupName="rg-${{ vars.AZURE_ENV_NAME }}" \
          --name $DEPLOYMENT_NAME

    - name: Get Deployment Outputs
      run: |
        # Wait for deployment to complete
        az deployment group wait \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --name $DEPLOYMENT_NAME \
          --created
        
        # Get deployment outputs
        DEPLOYMENT_OUTPUTS=$(az deployment group show \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --name $DEPLOYMENT_NAME \
          --query properties.outputs \
          --output json)
        
        ACR_NAME=$(echo $DEPLOYMENT_OUTPUTS | jq -r '.AZURE_CONTAINER_REGISTRY_NAME.value')
        echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
        
        # Extract resource token from ACR name for consistent naming
        RESOURCE_TOKEN=$(echo $ACR_NAME | sed 's/.*registry//')
        BACKEND_APP_NAME="${{ vars.AZURE_ENV_NAME }}-backend-$RESOURCE_TOKEN"
        FRONTEND_APP_NAME="${{ vars.AZURE_ENV_NAME }}-frontend-$RESOURCE_TOKEN"
        
        echo "BACKEND_APP_NAME=$BACKEND_APP_NAME" >> $GITHUB_ENV
        echo "FRONTEND_APP_NAME=$FRONTEND_APP_NAME" >> $GITHUB_ENV

    - name: Build and Push Container Images
      run: |
        # Login to Azure Container Registry
        az acr login --name $ACR_NAME
        
        # Build and push backend image
        echo "Building backend image..."
        az acr build \
          --registry $ACR_NAME \
          --image backend:${{ github.sha }} \
          --image backend:latest \
          ./backend
        
        # Build and push frontend image
        echo "Building frontend image..."
        az acr build \
          --registry $ACR_NAME \
          --image frontend:${{ github.sha }} \
          --image frontend:latest \
          ./frontend

    - name: Update Container Apps
      run: |
        # Update backend container app
        echo "Updating backend container app..."
        az containerapp update \
          --name $BACKEND_APP_NAME \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --image $ACR_NAME.azurecr.io/backend:${{ github.sha }}
        
        # Update frontend container app  
        echo "Updating frontend container app..."
        az containerapp update \
          --name $FRONTEND_APP_NAME \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --image $ACR_NAME.azurecr.io/frontend:${{ github.sha }}

    - name: Get Application URLs
      run: |
        echo "=== Deployment Complete ==="
        
        BACKEND_URL=$(az containerapp show \
          --name $BACKEND_APP_NAME \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        
        FRONTEND_URL=$(az containerapp show \
          --name $FRONTEND_APP_NAME \
          --resource-group "rg-${{ vars.AZURE_ENV_NAME }}" \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        
        echo "🌐 Frontend URL: https://$FRONTEND_URL"
        echo "🔗 Backend URL: https://$BACKEND_URL"
        
        echo "FRONTEND_URL=https://$FRONTEND_URL" >> $GITHUB_ENV
        echo "BACKEND_URL=https://$BACKEND_URL" >> $GITHUB_ENV
